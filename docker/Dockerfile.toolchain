#syntax=docker/dockerfile:1.2
#---------------------------------------------------------------------------------------------------
# Toolchain
# Description: This dockerfile is responsible for creating a Toolchain image that is used to build
# artifacts.
#---------------------------------------------------------------------------------------------------

# declare arguments with defaults
# Docker args
ARG DOCKER_BUILD_IMAGE="ubuntu:20.04"
# Debian/Ubuntu Env args
ARG DEBIAN_FRONTEND=noninteractive
# ARM GCC (Toolchain) args
ARG ARM_NONE_EABI_BASE_URL="https://developer.arm.com/-/media/Files/downloads/gnu-rm"
ARG ARM_NONE_EABI_PACKAGE_DATE="9-2019q4"
ARG ARM_NONE_EABI_PACKAGE_VERSION="9-2019-q4-major"
ARG ARM_NONE_EABI_ARCH="x86_64"
ARG ARM_NONE_EABI_PACKAGE_NAME="gcc-arm-none-eabi-$ARM_NONE_EABI_PACKAGE_VERSION"
ARG ARM_NONE_EABI_PACKAGE_FILENAME="$ARM_NONE_EABI_PACKAGE_NAME-$ARM_NONE_EABI_ARCH-linux.tar.bz2" 
ARG ARM_NONE_EABI_FULL_URL="$ARM_NONE_EABI_BASE_URL/$ARM_NONE_EABI_PACKAGE_DATE/$ARM_NONE_EABI_PACKAGE_FILENAME"
ARG TOOLCHAIN_BASE_PATH="/usr/local"
ARG TOOLCHAIN_FULL_PATH="$TOOLCHAIN_BASE_PATH/$ARM_NONE_EABI_PACKAGE_NAME/bin"
# nRF Connect SDK args
ARG NRF_CONNECT_SDK_MR="main"
ARG NRF_CONNECT_SDK_DIR="ncs"
# Meta args
ARG GIT_COMMIT="unspecified"
ARG MAINTAINERS="https://github.com/nixzee"

#---------------------------------------------------------------------------------------------------
# Section: toolchain
# Description: This dockerfile is responsible for creating a Toolchain image that is used to build
# artifacts.
# nRF Connect SDK Requirements:docke
# https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/gs_recommended_versions.html#req-tools-table
#---------------------------------------------------------------------------------------------------
FROM ${DOCKER_BUILD_IMAGE} AS toolchain

# Declare args in scope
ARG DEBIAN_FRONTEND
ARG ARM_NONE_EABI_BASE_URL
ARG ARM_NONE_EABI_PACKAGE_DATE
ARG ARM_NONE_EABI_PACKAGE_VERSION
ARG ARM_NONE_EABI_ARCH
ARG ARM_NONE_EABI_PACKAGE_NAME
ARG ARM_NONE_EABI_PACKAGE_FILENAME
ARG ARM_NONE_EABI_FULL_URL
ARG TOOLCHAIN_BASE_PATH
ARG TOOLCHAIN_FULL_PATH
ARG NRF_CONNECT_SDK_MR
ARG NRF_CONNECT_SDK_DIR
ARG GIT_COMMIT
ARG MAINTAINERS

# Set the Debian interactive dialogue
# Explanation: https://www.cyberciti.biz/faq/explain-debian_frontend-apt-get-variable-for-ubuntu-debian/
ENV DEBIAN_FRONTEND=${DEBIAN_FRONTEND}

# Install dependecy packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    cmake \
    ninja-build \
    gperf \
    ccache dfu-util \
    device-tree-compiler \
    wget \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-tk python3-wheel \
    xz-utils \
    file \
    make \
    gcc \
    gcc-multilib \
    g++-multilib \
    libsdl2-dev \
    build-essential \
    libncurses5 \
    libncurses5-dev

# Add the Kitware APT repository
RUN wget https://apt.kitware.com/kitware-archive.sh \
    && bash kitware-archive.sh \
    && rm kitware-archive.sh

# Confirm depedency versions
RUN cmake --version \
    && python3 --version \
    && dtc --version

# Install west, add to path, and confirm version
RUN pip3 install -U west \
    && west --version

# Create NCS directory
RUN mkdir "${NRF_CONNECT_SDK_DIR}"
WORKDIR ${NRF_CONNECT_SDK_DIR}

# Get the nRF Connect SDK
RUN west init -m https://github.com/nrfconnect/sdk-nrf --mr ${NRF_CONNECT_SDK_MR} \
    && west update

# Install Python dependencies in NCS
RUN pip3 install -r zephyr/scripts/requirements.txt \
    && pip3 install -r nrf/scripts/requirements.txt \
    && pip3 install -r bootloader/mcuboot/scripts/requirements.txt
    

# Download and Install arm-none-eabi-gcc
RUN wget $ARM_NONE_EABI_FULL_URL \
    && tar -xvf ${ARM_NONE_EABI_PACKAGE_FILENAME} --strip-components=1 -C ${TOOLCHAIN_BASE_PATH} \
    && rm -rf ${ARM_NONE_EABI_PACKAGE_FILENAME}

# Set the toolchain path and confirm version
# This sets the paths for zephyr and generic use
ENV PATH "${TOOLCHAIN_FULL_PATH}:$PATH"
ENV ZEPHYR_TOOLCHAIN_VARIANT "gnuarmemb"
ENV GNUARMEMB_TOOLCHAIN_PATH "${TOOLCHAIN_FULL_PATH}"
RUN arm-none-eabi-gcc --version \
    && arm-none-eabi-gdb --version \
    && echo $ZEPHYR_TOOLCHAIN_VARIANT \
    && echo $GNUARMEMB_TOOLCHAIN_PATH

# Set labels for easy inpsectin'
LABEL commit=${GIT_COMMIT}
LABEL maintainer=${MAINTAINERS}
LABEL nrf_connect_sdk_mr=${NRF_CONNECT_SDK_MR}
LABEL zephyr_toolchain_variant=${ZEPHYR_TOOLCHAIN_VARIANT}
LABEL gnuarmemb_toolchain_path=${GNUARMEMB_TOOLCHAIN_PATH} 
